-- Working type creation
SELECT '(1,1)'::point2d;
 point2d 
---------
 (1,1)
(1 row)

SELECT '(0,0)'::point2d;
 point2d 
---------
 (0,0)
(1 row)

SELECT '(-1.5,2.5)'::point2d;
  point2d   
------------
 (-1.5,2.5)
(1 row)

SELECT NULL::point2d;
 point2d 
---------
 
(1 row)

-- Error cases
SELECT '1,1'::point2d;
ERROR:  invalid input syntax for type Point: "1,1"
LINE 1: SELECT '1,1'::point2d;
               ^
SELECT '(1,1'::point2d;
ERROR:  invalid input syntax for type Point: "(1,1"
LINE 1: SELECT '(1,1'::point2d;
               ^
SELECT '1,1)'::point2d;
ERROR:  invalid input syntax for type Point: "1,1)"
LINE 1: SELECT '1,1)'::point2d;
               ^
SELECT '(1,1,1)'::point2d;
ERROR:  invalid input syntax for type Point: "(1,1,1)"
LINE 1: SELECT '(1,1,1)'::point2d;
               ^
-- Distance calculation
SELECT point2d_distance('(1,1)'::point2d, '(1,1)'::point2d);
 point2d_distance 
------------------
                0
(1 row)

SELECT point2d_distance('(1,1)'::point2d, '(0,0)'::point2d);
  point2d_distance  
--------------------
 1.4142135623730951
(1 row)

SELECT point2d_distance('(1,1)'::point2d, '(-1.5,2.5)'::point2d);
  point2d_distance  
--------------------
 2.9154759474226504
(1 row)

SELECT point2d_distance('(0,0)'::point2d, '(-1.5,2.5)'::point2d);
  point2d_distance  
--------------------
 2.9154759474226504
(1 row)

SELECT point2d_distance('(0,0)'::point2d, NULL::point2d);
 point2d_distance 
------------------
                 
(1 row)

-- Use the datatype in a table
CREATE TABLE point2d_table (id serial, point point2d);
INSERT INTO point2d_table (point) VALUES ('(1,1)'::point2d), ('(0,0)'::point2d), ('(-1.5,2.5)'::point2d), ('(10, 10)'::point2d);
SELECT * FROM point2d_table;
 id |   point    
----+------------
  1 | (1,1)
  2 | (0,0)
  3 | (-1.5,2.5)
  4 | (10,10)
(4 rows)

-- Find all points that are more than 2.5 units apart
SELECT tbl1.point AS p1, tbl2.point AS p2, point2d_distance(tbl1.point, tbl2.point) AS distance
      FROM point2d_table tbl1, point2d_table tbl2 
      WHERE tbl1.id < tbl2.id AND point2d_distance(tbl1.point, tbl2.point) > 2.5;
     p1     |     p2     |      distance      
------------+------------+--------------------
 (1,1)      | (-1.5,2.5) | 2.9154759474226504
 (1,1)      | (10,10)    | 12.727922061357855
 (0,0)      | (-1.5,2.5) | 2.9154759474226504
 (0,0)      | (10,10)    | 14.142135623730951
 (-1.5,2.5) | (10,10)    | 13.729530217745982
(5 rows)

DROP TABLE point2d_table;
